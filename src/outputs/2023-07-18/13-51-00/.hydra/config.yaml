opt:
  poly:
    regressor_caller: regressor__reg__
    polynomial_caller: regressor__poli__
    alpha:
      name: ${opt.poly.regressor_caller}alpha
      low: 1.0e-05
      high: 100
      prior: log-uniform
      type: real
    fit_intercept:
      name: ${opt.poly.regressor_caller}fit_intercept
      categories:
      - true
      - false
      type: categorical
    copy_X:
      name: ${opt.poly.regressor_caller}copy_X
      categories:
      - true
      - false
      type: categorical
    degree:
      name: ${opt.poly.polynomial_caller}degree
      low: 2
      high: 10
      type: integer
    interaction_only:
      name: ${opt.poly.polynomial_caller}interaction_only
      categories:
      - true
      - false
      type: categorical
    include_bias:
      name: ${opt.poly.polynomial_caller}include_bias
      categories:
      - true
      - false
      type: categorical
  svr:
    regressor_caller: regressor__reg__
    kernel:
      name: ${opt.svr.regressor_caller}kernel
      categories:
      - rbf
      - sigmoid
      - poly
      type: categorical
    gamma:
      name: ${opt.svr.regressor_caller}gamma
      categories:
      - scale
      - auto
      type: categorical
    degree:
      name: ${opt.svr.regressor_caller}degree
      low: 1
      high: 10
      type: integer
    coef0:
      name: ${opt.svr.regressor_caller}coef0
      low: 0
      high: 10
      type: real
    C:
      name: ${opt.svr.regressor_caller}C
      low: 0.1
      high: 5
      type: real
    epsilon:
      name: ${opt.svr.regressor_caller}epsilon
      low: 0.01
      high: 5
      type: real
  xgb:
    learning_rate:
      name: learning_rate
      prior: log-uniform
      low: 0.0001
      high: 0.2
      type: real
    n_estimators:
      name: n_estimators
      low: 100
      high: 2000
      type: integer
    max_depth:
      name: max_depth
      low: 1
      high: 15
      type: integer
    min_child_weight:
      name: min_child_weight
      low: 1
      high: 15
      type: integer
    gamma:
      name: gamma
      low: 0
      high: 6
      type: real
    subsample:
      name: subsample
      low: 0.1
      high: 1
      type: real
    colsample_bytree:
      name: colsample_bytree
      low: 0.1
      high: 1
      type: real
    reg_alpha:
      name: reg_alpha
      low: 0
      high: 1
      type: real
    reg_lambda:
      name: reg_lambda
      low: 0
      high: 1
      type: real
  nn:
    regressor_caller: regressor__reg__
    activation:
      name: ${opt.svr.regressor_caller}activation
      categories:
      - tanh
      - relu
      - logistic
      type: categorical
    learning_rate_init:
      name: ${opt.svr.regressor_caller}learning_rate_init
      low: 1.0e-06
      high: 0.001
      prior: log-uniform
      type: real
    n_hidden_layer:
      name: n_hidden_layer
      low: 1
      high: 10
      type: integer
    n_neurons_per_layer:
      name: n_neurons_per_layer
      low: 1
      high: 10
      type: integer
    beta_1:
      name: ${opt.svr.regressor_caller}beta_1
      low: 0.5
      high: 0.9
      type: real
    beta_2:
      name: ${opt.svr.regressor_caller}beta_2
      low: 0.5
      high: 0.9
      type: real
    epsilon:
      name: ${opt.svr.regressor_caller}epsilon
      low: 1.0e-07
      high: 1.0e-05
      type: real
  features:
    all:
      apolar:
        feat1:
        - Ei
        - Alpha
        - pi_bond
        feat2:
        - Ei
        - Alpha
        feat3:
        - Ei
        - pi_bond
        feat4:
        - Alpha
        - pi_bond
      polar:
        feat1:
        - Ei
        - Alpha
        - Dipole
        - pi_bond
        feat2:
        - Ei
        - Alpha
        - Dipole
        feat3:
        - Alpha
        - Dipole
        feat4:
        - Alpha
        - Dipole
        - pi_bond
      polar_apolar:
        feat1:
        - Ei
        - Alpha
        - Dipole
        - pi_bond
        feat2:
        - Ei
        - Alpha
        - Dipole
        feat3:
        - Alpha
        - Dipole
        feat4:
        - Alpha
        - Dipole
        - pi_bond
    partial:
      apolar:
        feat1_iso:
        - Ei
        - Alpha
        - pi_bond
        feat2_iso:
        - Ei
        - Alpha
        feat3_iso:
        - Ei
        - pi_bond
        feat4_iso:
        - Alpha
        - pi_bond
        feat1_aniso:
        - Ei
        - axx
        - ayy
        - azz
        - pi_bond
        feat2_aniso:
        - Ei
        - axx
        - ayy
        - azz
        feat3_aniso:
        - Ei
        - pi_bond
        feat4_aniso:
        - axx
        - ayy
        - azz
        - pi_bond
      polar:
        feat1_iso:
        - Ei
        - Alpha
        - Dipole
        - pi_bond
        feat2_iso:
        - Ei
        - Alpha
        - Dipole
        feat3_iso:
        - Alpha
        - Dipole
        feat4_iso:
        - Alpha
        - Dipole
        - pi_bond
        feat1_aniso:
        - Ei
        - axx
        - ayy
        - azz
        - Dipole
        - pi_bond
        feat2_aniso:
        - Ei
        - axx
        - ayy
        - azz
        - Dipole
        feat3_aniso:
        - axx
        - ayy
        - azz
        - Dipole
        feat4_aniso:
        - axx
        - ayy
        - azz
        - Dipole
        - pi_bond
      polar_apolar:
        feat1_iso:
        - Ei
        - Alpha
        - Dipole
        - pi_bond
        feat2_iso:
        - Ei
        - Alpha
        - Dipole
        feat3_iso:
        - Alpha
        - Dipole
        feat4_iso:
        - Alpha
        - Dipole
        - pi_bond
        feat1_aniso:
        - Ei
        - axx
        - ayy
        - azz
        - Dipole
        - pi_bond
        feat2_aniso:
        - Ei
        - axx
        - ayy
        - azz
        - Dipole
        feat3_aniso:
        - axx
        - ayy
        - azz
        - Dipole
        feat4_aniso:
        - axx
        - ayy
        - azz
        - Dipole
        - pi_bond
  scaling_regressor:
    name: regressor__scale__scale
    categories:
    - StandardScaler()
    - MinMaxScaler()
    - RobustScaler()
    type: scalers
  scaling_transformer:
    name: transformer
    categories:
    - StandardScaler()
    - MinMaxScaler()
    - RobustScaler()
    type: scalers
process:
  to_drop:
    apolar:
    - AlphaB
    - Molecule Type
    - N of Carbon
    - DYS
    - SG
    - PauloPred
    polar:
    - Molecule Type
    - AlphaB
data:
  apolar:
    raw: ../data/raw/expd_apolar_molecules.CSV
    processed:
      dir: ../data/processed
      name: processed_apolar.csv
      path: ${data.apolar.processed.dir}/${data.apolar.processed.name}
    final:
      dir: ../data/final
      name: final_apolar.csv
      path: ${data.apolar.final.dir}/${data.apolar.final.name}
  polar:
    raw: ../data/raw/polar_molecules.CSV
    processed:
      dir: ../data/processed
      name: processed_polar.csv
      path: ${data.polar.processed.dir}/${data.polar.processed.name}
    final:
      dir: ../data/final
      name: final_polar.csv
      path: ${data.polar.final.dir}/${data.polar.final.name}
  polar_apolar:
    processed:
      dir: ../data/processed
      name: processed_polar_apolar.csv
      path: ${data.polar_apolar.processed.dir}/${data.polar_apolar.processed.name}
    final:
      dir: ../data/final
      name: final_polar_apolar.csv
      path: ${data.polar_apolar.final.dir}/${data.polar_apolar.final.name}
models:
  apolar:
    dir: ../models/apolar
    all: ${models.apolar.dir}/all
    ei_alpha: ${models.apolar.dir}/ei_alpha
    pi_alpha: ${models.apolar.dir}/pi_alpha
    pi_ei: ${models.apolar.dir}/pi_ei
  polar:
    dir: ../models/polar
    all: ${models.polar.dir}/all
    ei_alpha_dipole: ${models.polar.dir}/ei_alpha_dipole
    alpha_dipole: ${models.polar.dir}/alpha_dipole
    alpha_dipole_pi: ${models.polar.dir}/alpha_dipole_pi
  polar_apolar:
    dir: ../models/polar_apolar
    all: ${models.polar_apolar.dir}/all
    ei_alpha_dipole: ${models.polar_apolar.dir}/ei_alpha_dipole
    alpha_dipole: ${models.polar_apolar.dir}/alpha_dipole
    alpha_dipole_pi: ${models.polar_apolar.dir}/alpha_dipole_pi
eval:
  all:
    apolar:
      dir: ../performances/apolar
      train_score_path: ${eval.all.apolar.dir}/all_train_score.csv
      test_score_path: ${eval.all.apolar.dir}/all_test_score.csv
      train_std_path: ${eval.all.apolar.dir}/all_train_std.csv
      test_std_path: ${eval.all.apolar.dir}/all_test_std.csv
    polar:
      dir: ../performances/polar
      train_score_path: ${eval.all.polar.dir}/all_train_score.csv
      test_score_path: ${eval.all.polar.dir}/all_test_score.csv
      train_std_path: ${eval.all.polar.dir}/all_train_std.csv
      test_std_path: ${eval.all.polar.dir}/all_test_std.csv
    polar_apolar:
      dir: ../performances/polar_apolar
      train_score_path: ${eval.all.polar_apolar.dir}/all_train_score.csv
      test_score_path: ${eval.all.polar_apolar.dir}/all_test_score.csv
      train_std_path: ${eval.all.polar_apolar.dir}/all_train_std.csv
      test_std_path: ${eval.all.polar_apolar.dir}/all_test_std.csv
  partial_iso:
    apolar:
      dir: ../performances/apolar
      train_score_path: ${eval.partial_iso.apolar.dir}/partial_iso_train_score.csv
      test_score_path: ${eval.partial_iso.apolar.dir}/partial_iso_test_score.csv
      train_std_path: ${eval.partial_iso.apolar.dir}/partial_iso_train_std.csv
      test_std_path: ${eval.partial_iso.apolar.dir}/partial_iso_test_std.csv
    polar:
      dir: ../performances/polar
      train_score_path: ${eval.partial_iso.polar.dir}/partial_iso_train_score.csv
      test_score_path: ${eval.partial_iso.polar.dir}/partial_iso_test_score.csv
      train_std_path: ${eval.partial_iso.polar.dir}/partial_iso_train_std.csv
      test_std_path: ${eval.partial_iso.polar.dir}/partial_iso_test_std.csv
    polar_apolar:
      dir: ../performances/polar_apolar
      train_score_path: ${eval.partial_iso.polar_apolar.dir}/partial_iso_train_score.csv
      test_score_path: ${eval.partial_iso.polar_apolar.dir}/partial_iso_test_score.csv
      train_std_path: ${eval.partial_iso.polar_apolar.dir}/partial_iso_train_std.csv
      test_std_path: ${eval.partial_iso.polar_apolar.dir}/partial_iso_test_std.csv
  partial_aniso:
    apolar:
      dir: ../performances/apolar
      train_score_path: ${eval.partial_aniso.apolar.dir}/partial_aniso_train_score.csv
      test_score_path: ${eval.partial_aniso.apolar.dir}/partial_aniso_test_score.csv
      train_std_path: ${eval.partial_aniso.apolar.dir}/partial_aniso_train_std.csv
      test_std_path: ${eval.partial_aniso.apolar.dir}/partial_aniso_test_std.csv
    polar:
      dir: ../performances/polar
      train_score_path: ${eval.partial_aniso.polar.dir}/partial_aniso_train_score.csv
      test_score_path: ${eval.partial_aniso.polar.dir}/partial_aniso_test_score.csv
      train_std_path: ${eval.partial_aniso.polar.dir}/partial_aniso_train_std.csv
      test_std_path: ${eval.partial_aniso.polar.dir}/partial_aniso_test_std.csv
    polar_apolar:
      dir: ../performances/polar_apolar
      train_score_path: ${eval.partial_aniso.polar_apolar.dir}/partial_aniso_train_score.csv
      test_score_path: ${eval.partial_aniso.polar_apolar.dir}/partial_aniso_test_score.csv
      train_std_path: ${eval.partial_aniso.polar_apolar.dir}/partial_aniso_train_std.csv
      test_std_path: ${eval.partial_aniso.polar_apolar.dir}/partial_aniso_test_std.csv
